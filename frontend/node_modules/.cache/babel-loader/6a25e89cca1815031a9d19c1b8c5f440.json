{"ast":null,"code":"import axios from \"axios\";\nconst API_KEY = \"AIzaSyDMpmORBdsUlsZpKTr-REU-8Hqw7qh9t78\";\n\nconst getCoordsForAddress = async address => {\n  const response = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=${API_KEY}`).then(response => {\n    return response.data.results[0].geometry.location;\n  }).catch(console.error); // const data = response.data;\n  // const coordinates = data.results[0].geometry.location;\n  // return coordinates;\n}; // try {\n// }\n// if (!data || data.status === \"ZERO_RESULTS\") {\n//   throw error;\n// }\n\n\nexport default getCoordsForAddress;","map":{"version":3,"sources":["E:/coding/hackcovy/coronabrain-webapp/src/shared/components/UIElements/location.js"],"names":["axios","API_KEY","getCoordsForAddress","address","response","get","encodeURIComponent","then","data","results","geometry","location","catch","console","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,yCAAhB;;AAEA,MAAMC,mBAAmB,GAAG,MAAMC,OAAN,IAAiB;AAC3C,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CACzBK,GADoB,CAElB,6DAA4DC,kBAAkB,CAC7EH,OAD6E,CAE7E,QAAOF,OAAQ,EAJE,EAMpBM,IANoB,CAMfH,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACI,IAAT,CAAcC,OAAd,CAAsB,CAAtB,EAAyBC,QAAzB,CAAkCC,QAAzC;AACD,GARoB,EASpBC,KAToB,CASdC,OAAO,CAACC,KATM,CAAvB,CAD2C,CAY3C;AACA;AACA;AACD,CAfD,C,CAiBA;AACA;AACA;AACA;AACA;;;AACA,eAAeZ,mBAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_KEY = \"AIzaSyDMpmORBdsUlsZpKTr-REU-8Hqw7qh9t78\";\r\n\r\nconst getCoordsForAddress = async address => {\r\n  const response = await axios\r\n    .get(\r\n      `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(\r\n        address\r\n      )}&key=${API_KEY}`\r\n    )\r\n    .then(response => {\r\n      return response.data.results[0].geometry.location;\r\n    })\r\n    .catch(console.error);\r\n\r\n  // const data = response.data;\r\n  // const coordinates = data.results[0].geometry.location;\r\n  // return coordinates;\r\n};\r\n\r\n// try {\r\n// }\r\n// if (!data || data.status === \"ZERO_RESULTS\") {\r\n//   throw error;\r\n// }\r\nexport default getCoordsForAddress;\r\n"]},"metadata":{},"sourceType":"module"}