{"ast":null,"code":"var _jsxFileName = \"E:\\\\coding\\\\hackcovy\\\\coronabrain-webapp\\\\src\\\\components\\\\shared\\\\FormElements\\\\Input.js\";\nimport React, { useReducer, useEffect } from \"react\"; // import getCoordsForAddress from \"../UIElements/location\";\n\nimport axios from \"axios\";\nimport Map from \"../UIElements/Map\";\nimport { validate } from \"../../../util/validators\";\nimport \"./Input.css\";\nconst API_KEY = \"AIzaSyDMpmORBdsUlsZpKTr-REU-8Hqw7qh9t78\";\n\nconst getCoordsForAddress = async address => {\n  const response = await axios.get(`https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(address)}&key=${API_KEY}`).catch(console.error);\n  const data = response.data;\n  const coordinate = data.results[0].geometry.location;\n  return console.log(coordinate); // .then(response => {\n  //   return response.data.results[0].geometry.location;\n  // })\n  // .catch(console.error);\n};\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return { ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n\n    case \"TOUCH\":\n      {\n        return { ...state,\n          isTouched: true\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n  const {\n    id,\n    onInput\n  } = props;\n  const {\n    value,\n    isValid\n  } = inputState;\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: \"CHANGE\",\n      val: event.target.value,\n      validators: props.validators,\n      id: props.id\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: \"TOUCH\"\n    });\n  };\n\n  const element = props.element === \"input\" ? /*#__PURE__*/React.createElement(\"input\", {\n    id: props.id,\n    type: props.type,\n    placeholder: props.placeholder,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }) : /*#__PURE__*/React.createElement(\"textarea\", {\n    id: props.id,\n    rows: props.rows || 3,\n    onChange: changeHandler,\n    onBlur: touchHandler,\n    value: inputState.value,\n    placeholder: props.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `form-control ${!inputState.isValid && inputState.isTouched && \"form-control--invalid\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, element, !inputState.isValid && inputState.isTouched && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 55\n    }\n  }, props.errorText));\n};\n\nexport default Input;","map":{"version":3,"sources":["E:/coding/hackcovy/coronabrain-webapp/src/components/shared/FormElements/Input.js"],"names":["React","useReducer","useEffect","axios","Map","validate","API_KEY","getCoordsForAddress","address","response","get","encodeURIComponent","catch","console","error","data","coordinate","results","geometry","location","log","inputReducer","state","action","type","value","val","isValid","validators","isTouched","Input","props","inputState","dispatch","initialValue","initialValid","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","rows","errorText"],"mappings":"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","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\r\n\r\n// import getCoordsForAddress from \"../UIElements/location\";\r\nimport axios from \"axios\";\r\nimport Map from \"../UIElements/Map\";\r\nimport { validate } from \"../../../util/validators\";\r\nimport \"./Input.css\";\r\n\r\nconst API_KEY = \"AIzaSyDMpmORBdsUlsZpKTr-REU-8Hqw7qh9t78\";\r\n\r\nconst getCoordsForAddress = async address => {\r\n  const response = await axios\r\n    .get(\r\n      `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(\r\n        address\r\n      )}&key=${API_KEY}`\r\n    )\r\n    .catch(console.error);\r\n  const data = response.data;\r\n  const coordinate = data.results[0].geometry.location;\r\n  return console.log(coordinate);\r\n  // .then(response => {\r\n  //   return response.data.results[0].geometry.location;\r\n  // })\r\n  // .catch(console.error);\r\n};\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case \"TOUCH\": {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || \"\",\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n      id: props.id\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: \"TOUCH\"\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n        placeholder={props.placeholder}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid &&\r\n        inputState.isTouched &&\r\n        \"form-control--invalid\"}`}\r\n    >\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}