{"ast":null,"code":"var _jsxFileName = \"E:\\\\coding\\\\hackcovy\\\\coronabrain-webapp\\\\src\\\\auth\\\\pages\\\\Auth.js\";\nimport React, { useState, useContext } from \"react\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport Map from \"../../shared/components/UIElements/Map\";\nimport getCoordsForAddress from \"../../shared/components/UIElements/location\";\nimport \"./Auth.css\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const [formState, inputHandler, setFormData] = useForm({\n    email: {\n      value: \"\",\n      isValid: false\n    },\n    password: {\n      value: \"\",\n      isValid: false\n    }\n  }, false);\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData({ ...formState.inputs,\n        name: undefined,\n        company: undefined,\n        address: undefined\n      }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n    } else {\n      setFormData({ ...formState.inputs,\n        name: {\n          value: \"\",\n          isValid: false\n        }\n      }, false);\n    }\n\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = event => {\n    event.preventDefault();\n    console.log(formState.inputs);\n    auth.login();\n  };\n\n  const map = /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"map-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Map, {\n    center: {\n      lat: 1.286747,\n      lng: 103.852297\n    },\n    zoom: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"authentication\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, isLoginMode ? /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Log in\") : /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"one\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Sign up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: authSubmitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, !isLoginMode && /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"name\",\n    type: \"text\",\n    label: \"Your Name\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a name.\",\n    onInput: inputHandler,\n    placeholder: \"Your Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"email\",\n    type: \"email\",\n    label: \"E-Mail\",\n    validators: [VALIDATOR_EMAIL()],\n    errorText: \"Please enter a valid email address.\",\n    onInput: inputHandler,\n    placeholder: \"Your Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    validators: [VALIDATOR_MINLENGTH(5)],\n    errorText: \"Please enter a valid password, at least 5 characters.\",\n    onInput: inputHandler,\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }), !isLoginMode && /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"company\",\n    type: \"text\",\n    label: \"Company\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter a company name.\",\n    onInput: inputHandler,\n    placeholder: \"Your Company Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    element: \"input\",\n    id: \"address\",\n    type: \"text\",\n    label: \"Address\",\n    validators: [VALIDATOR_REQUIRE()],\n    errorText: \"Please enter an address.\",\n    onInput: inputHandler,\n    placeholder: \"Your Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), map), !isLoginMode ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"terms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, \"By signing up, you agreed with our Terms of Services and Privacy Policy.\") : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"forgot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, \"Forgot your password?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    disabled: !formState.isValid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, isLoginMode ? \"\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\" + \"Log in\" + \"\\xa0\\xa0\\xa0\\xa0\\xa0\" : \"\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\" + \"Sign up\" + \"\\xa0\\xa0\\xa0\\xa0\\xa0\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, !isLoginMode ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \"Already have account? \\xA0\\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n    className: \"login\",\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"Log in\"), \" \") : /*#__PURE__*/React.createElement(\"p\", {\n    className: \"p\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, \"Don't have an account? \\xA0\\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n    className: \"login\",\n    onClick: switchModeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 15\n    }\n  }, \"Sign up\"), \" \"))));\n};\n\nexport default Auth;","map":{"version":3,"sources":["E:/coding/hackcovy/coronabrain-webapp/src/auth/pages/Auth.js"],"names":["React","useState","useContext","Card","Input","Button","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","VALIDATOR_REQUIRE","useForm","AuthContext","Map","getCoordsForAddress","Auth","auth","isLoginMode","setIsLoginMode","formState","inputHandler","setFormData","email","value","isValid","password","switchModeHandler","inputs","name","undefined","company","address","prevMode","authSubmitHandler","event","preventDefault","console","log","login","map","lat","lng"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\r\n\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Input from \"../../shared/components/FormElements/Input\";\r\nimport Button from \"../../shared/components/FormElements/Button\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE\r\n} from \"../../shared/util/validators\";\r\nimport { useForm } from \"../../shared/hooks/form-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Map from \"../../shared/components/UIElements/Map\";\r\nimport getCoordsForAddress from \"../../shared/components/UIElements/location\";\r\nimport \"./Auth.css\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          company: undefined,\r\n          address: undefined\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false\r\n          }\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode(prevMode => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = event => {\r\n    event.preventDefault();\r\n    console.log(formState.inputs);\r\n    auth.login();\r\n  };\r\n\r\n  const map = (\r\n    <div>\r\n      <div className=\"map-container\">\r\n        <Map center={{ lat: 1.286747, lng: 103.852297 }} zoom={16} />\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Card className=\"authentication\">\r\n      {isLoginMode ? (\r\n        <h2 className=\"one\">Log in</h2>\r\n      ) : (\r\n        <h2 className=\"one\">Sign up</h2>\r\n      )}\r\n\r\n      <form onSubmit={authSubmitHandler}>\r\n        {!isLoginMode && (\r\n          <Input\r\n            element=\"input\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            label=\"Your Name\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a name.\"\r\n            onInput={inputHandler}\r\n            placeholder=\"Your Name\"\r\n          />\r\n        )}\r\n        <Input\r\n          element=\"input\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          label=\"E-Mail\"\r\n          validators={[VALIDATOR_EMAIL()]}\r\n          errorText=\"Please enter a valid email address.\"\r\n          onInput={inputHandler}\r\n          placeholder=\"Your Email\"\r\n        />\r\n        <Input\r\n          element=\"input\"\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid password, at least 5 characters.\"\r\n          onInput={inputHandler}\r\n          placeholder=\"Password\"\r\n        />\r\n        {!isLoginMode && (\r\n          <React.Fragment>\r\n            <Input\r\n              element=\"input\"\r\n              id=\"company\"\r\n              type=\"text\"\r\n              label=\"Company\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a company name.\"\r\n              onInput={inputHandler}\r\n              placeholder=\"Your Company Name\"\r\n            />\r\n            <Input\r\n              element=\"input\"\r\n              id=\"address\"\r\n              type=\"text\"\r\n              label=\"Address\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter an address.\"\r\n              onInput={inputHandler}\r\n              placeholder=\"Your Address\"\r\n            />\r\n            {map}\r\n          </React.Fragment>\r\n        )}\r\n\r\n        {!isLoginMode ? (\r\n          <p className=\"terms\">\r\n            By signing up, you agreed with our Terms of Services and Privacy\r\n            Policy.\r\n          </p>\r\n        ) : (\r\n          <p className=\"forgot\">Forgot your password?</p>\r\n        )}\r\n        <div className=\"center2\">\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode\r\n              ? \"\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\" + \"Log in\" + \"\\xa0\\xa0\\xa0\\xa0\\xa0\"\r\n              : \"\\xa0\\xa0\\xa0\\xa0\\xa0\\xa0\" + \"Sign up\" + \"\\xa0\\xa0\\xa0\\xa0\\xa0\"}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n      <div className=\"center\">\r\n        <div>\r\n          {!isLoginMode ? (\r\n            <p className=\"p\">\r\n              Already have account? &nbsp;&nbsp;\r\n              <a className=\"login\" onClick={switchModeHandler}>\r\n                Log in\r\n              </a>{\" \"}\r\n            </p>\r\n          ) : (\r\n            <p className=\"p\">\r\n              Don't have an account? &nbsp;&nbsp;\r\n              <a className=\"login\" onClick={switchModeHandler}>\r\n                Sign up\r\n              </a>{\" \"}\r\n            </p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}